import React, { useCallback, useEffect, useState } from "react";
import { useTranslation } from "react-i18next";
import styles from "./Tarif.module.scss";
import Accordion from "./components/Accordion";
import Row from "./components/Row";
import Item from "./components/Item";
import BackImg from "../../../assets/images/background.png";

export const accordionItems = [
  { id: 1, name: "Ежедневная комиссия на остаток денежных средств на счете" },
  { id: 2, name: "Совершение Срочных сделок" },
  {
    id: 3,
    name: "Покупка или продажа акций, паев, депозитарных расписок из расширенного списка",
  },
  { id: 4, name: "Покупка или продажа структурных нот" },
  {
    id: 5,
    name: "Покупка или продажа финансовых инструментов из расширенного списка",
  },
  { id: 6, name: "Доверительное управление" },
  { id: 7, name: "Маржинальная торговля" },
];

export const itemList = [
  {
    id: 1,
    name: "0,2%",
    text: "Покупка или продажа",
    subtext: "акций, облигаций",
  },
  {
    id: 2,
    name: "1,5%",
    text: "Покупка или продажа",
    subtext: "драгоценных металлов",
  },
  {
    id: 3,
    name: "0,7%",
    text: "Покупка или продажа",
    subtext: "валютных инструментов",
  },
  { id: 4, name: "3%", text: "Покупка", subtext: "еврооблигаций" },
];

export const text = [
  {
    id: 1,
    text: "Рассчитанная комиссия округляется по правилам математического округления до второго знака после запятой и не может составлять менее 0, 01 (Ноль целых одна сотая) единицы в соответствующей валюте сделки.",
  },
  {
    id: 2,
    text: "Комиссия взимается за каждый календарный день. Остаток денежных средств в USD, EUR, KGS рассчитывается ежедневно в период с 02: 00 до 04: 00 по Бишкекскому времени суммарно по всем Договорам.",
  },
  {
    id: 3,
    text: "Комиссия Брокера взимается при заключении Срочных сделок и исполнении расчетных Срочных контрактов. При расчете стоимости Срочного контракта используется установленное организатором торгов значение шага цены на момент совершения Срочной сделки. При исполнении поставочных Срочных контрактов взимается комиссия за сделку с ценными бумагами, совершаемую во исполнение Срочного контракта, в соответствии с тарифом. Комиссия взимается за каждый календарный день и рассчитывается в зависимости от суммы стоимостных оценок Непокрытых позиций (далее — сумма Непокрытой позиции). Сумма Непокрытых позиций рассчитывается ежедневно в период с 02: 00 до 04: 00 по Бишкекскому времени. Для определения суммы Непокрытой позиции суммируются стоимостные оценки Непокрытых позиций в KGS , иностранным валютам и ценным бумагам, составляющим Портфель Инвестора в рамках одного Договора.",
  },
  {
    id: 4,
    text: "В целях применения Тарифа стоимость ценных бумаг учитывается по цене закрытия торгового дня, предшествующего дню расчета стоимости Активов и Непокрытых позиций,рассчитанной одним из организаторов торгов, к торгам которого допущена указанная ценная бумага, или по индикативной котировке, предоставляемой провайдерами данных. Стоимость иностранной валюты и стоимость ценных бумаг, рассчитанная в иностранной валюте, учитывается в KGS по цене закрытия соответствующего валютного инструмента",
  },
];
const Tarif = () => {
  const { t } = useTranslation();

  return (
    // <div className="page_container">
    //   <div className={`${styles.paper}`}>
    //     <div className={styles.title_flex}>
    //       <div className="page_title">{t("User_layout.tarif")}</div>
    //     </div>
    //   </div>
    // </div>
    <div className={styles.App}>
      <img className={styles.Background} src={BackImg} alt="" />

      <section>
        <Row gap={74} className={styles.firstBlock}>
          <h1>Инвестор</h1>
          <p className={styles.text}>
            В рамках Тарифа «Инвестор» доступна покупка и продажа ценных бумаг
            российских и иностранных эмитентов и иных финансовых инструментов из
            базового списка.
          </p>
        </Row>

        <Row gap={30} className={styles.secondBlock}>
          {itemList.map((item) => (
            <Item key={item.id} item={item} />
          ))}
        </Row>
      </section>

      <section className={styles.AccordionList}>
        {accordionItems.map((item) => (
          <Accordion key={item.id} item={item} />
        ))}
      </section>

      <section className={styles.TextList}>
        {text.map((item) => (
          <p key={item.id} className={styles.text}>
            {item.text}
          </p>
        ))}
      </section>
    </div>
  );
};

export default Tarif;
